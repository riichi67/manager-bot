import discord
import os
from discord.ext import commands, bridge
from webserver import keep_alive

token = os.environ.get("token")
intents = discord.Intents()
intents.message_content = True
bot = bridge.Bot(command_prefix=os.environ.get("prefix"), intents=intents)


@bot.event  # –ó–∞–ø—É—Å–∫ (–∏–Ω—Ñ–æ –≤ –∫–æ–Ω—Å–æ–ª–∏)
async def on_ready():
    print(f'{bot.user.name} –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')


@bot.bridge_command(description='–ó–∞—Å—Ç–∞–≤–∏—Ç –∫–æ–≥–æ —É–≥–æ–¥–Ω–æ –∑–∞–º–æ–ª—á–∞—Ç—å.')  # –ú—å—é—Ç
@commands.has_permissions(administrator=True)
async def mute(ctx, member: discord.Member):
    guild = ctx.guild
    mutedRole = discord.utils.get(guild.roles, name="–£–±–æ—Ä—â–∏–∫")
    if not mutedRole:
        mutedRole = await guild.create_role(name="–£–±–æ—Ä—â–∏–∫")
        for channel in guild.channels:
            await channel.set_permissions(mutedRole,
                                          speak=False,
                                          send_messages=False,
                                          read_message_history=True,
                                          read_messages=False)
    await member.add_roles(mutedRole)
    await ctx.respond(f"–ú—å—é—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫—É {member.mention}!")


@bot.bridge_command(
    description='–õ—é–±–æ–º—É –º–æ–ª—á–∞–Ω–∏—é –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –∫–æ–Ω–µ—Ü, –Ω–µ —Ç–∞–∫ –ª–∏?')  # –†–∞–∑–º—å—é—Ç
@commands.has_permissions(administrator=True)
async def unmute(ctx, member: discord.Member):
    guild = ctx.guild
    mutedRole = discord.utils.get(guild.roles, name="–£–±–æ—Ä—â–∏–∫")
    if not mutedRole:
        mutedRole = await guild.create_role(name="–£–±–æ—Ä—â–∏–∫")
        for channel in guild.channels:
            await channel.set_permissions(mutedRole,
                                          speak=False,
                                          send_messages=False,
                                          read_message_history=True,
                                          read_messages=False)
    await member.remove_roles(mutedRole)
    await ctx.respond(f"–ú—å—é—Ç —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention}!")


@mute.error  # –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤ –¥–ª—è –º—É—Ç–∞
async def permserror(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        ctx.respond(
            '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã...')


class MyView(discord.ui.View): # UI-–∫–ª–∞—Å—Å –ø–∏–Ω–≥–∞
    @discord.ui.button(label="–ü–æ–µ—Ö–∞–ª–∏!", style=discord.ButtonStyle.primary, emoji="üèì")
    async def button_callback(self, button, interaction):
        await interaction.response.send_message(f"–ü–∏–Ω–≥ –±–æ—Ç–∞ - {round(bot.latency*1000, 1)} –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥!")

@bot.slash_command(name="attach", description='–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞')
@option(
    "attachment",
    discord.Attachment,
    description="—Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
    required=True,
)
async def say(
    ctx: discord.ApplicationContext,
    attachment: discord.Attachment,
):
    if attachment:
        file = await attachment.to_file()
        await ctx.respond("–í–æ—Ç —Ç–≤–æ–π —Ñ–∞–π–ª!", file=file)
    else:
        await ctx.respond(":cry:")

@bot.event # –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–º–∞–Ω–¥—ã
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–∞–±—Ä–∞–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å –≤ –º–µ–Ω—é —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥!")

keep_alive()
bot.run(token)
